'use strict';

export default {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.createTable('orders', {
      id: {
        type: Sequelize.BIGINT.UNSIGNED,
        autoIncrement: true,
        primaryKey: true,
      },
      token: Sequelize.TEXT,
      code: Sequelize.TEXT,
      cus_email: Sequelize.TEXT,
      cus_first_name: Sequelize.TEXT,
      cus_last_name: Sequelize.TEXT,
      cus_phone: Sequelize.TEXT,
      cus_flag: Sequelize.TEXT,
      grand_total: Sequelize.TEXT,
      pay_restaurant: Sequelize.TEXT,
      rider_tip: Sequelize.TEXT,
      vat_total: Sequelize.TEXT,
      total_net: Sequelize.TEXT,
      collect_from_customer: Sequelize.TEXT,
      payment_type: Sequelize.TEXT,
      payment_status: Sequelize.TEXT,
      expeditionType: Sequelize.TEXT,
      expected_delivery_time: Sequelize.DATE,
      express_delivery: Sequelize.TINYINT,
      rider_pickup_time: Sequelize.DATE,
      pickup_time: Sequelize.DATE,
      pickup_code: Sequelize.TEXT,
      postcode: Sequelize.TEXT,
      city: Sequelize.TEXT,
      street: Sequelize.TEXT,
      number: Sequelize.TEXT,
      building: Sequelize.TEXT,
      company: Sequelize.TEXT,
      delivery_area: Sequelize.TEXT,
      delivery_instructions: Sequelize.TEXT,
      delivery_main_area: Sequelize.TEXT,
      entrance: Sequelize.TEXT,
      flat_number: Sequelize.TEXT,
      floor: Sequelize.TEXT,
      intercom: Sequelize.TEXT,
      latitude: Sequelize.TINYINT,
      longitude: Sequelize.TINYINT,
      comments: Sequelize.TEXT,
      country_code: Sequelize.STRING(10),
      currency_symbol: Sequelize.STRING(10),
      platform: Sequelize.STRING(50),
      platform_key: Sequelize.STRING(50),
      invoice_carrier_type: Sequelize.TEXT,
      invoice_carrier_value: Sequelize.TEXT,
      corporate_tax: Sequelize.TEXT,
      test: Sequelize.TINYINT,
      short_code: Sequelize.TEXT,
      platform_restaurant_id: Sequelize.TEXT,
      accepted_url: Sequelize.TEXT,
      rejected_url: Sequelize.TEXT,
      picked_up: Sequelize.TEXT,
      prepared_url: Sequelize.TEXT,
      expire_at: Sequelize.DATE,
      created_at: Sequelize.DATE,
      updated_at: Sequelize.DATE,
      deleted_at: Sequelize.DATE,
    }, {
      charset: 'utf8mb4',
      collate: 'utf8mb4_unicode_ci',
      engine: 'InnoDB',
    });
  },

  down: async (queryInterface, Sequelize) => {
    await queryInterface.dropTable('orders');
  }
};
